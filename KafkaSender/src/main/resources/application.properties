# talk to the Docker broker
spring.kafka.bootstrap-servers=localhost:29092

# STRING serializers/deserializers
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# receiver group and offset policy
spring.kafka.consumer.group-id=gid
spring.kafka.consumer.auto-offset-reset=earliest

# logging (fix the property key)
logging.level.root=ERROR
logging.level.org.springframework=ERROR

#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=localhost:29092
#spring.kafka.consumer.group-id= gid
#spring.kafka.consumer.auto-offset-reset= earliest
#spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=kafka
#
#
#logging.level.root= ERROR
#org.springframework= ERROR
